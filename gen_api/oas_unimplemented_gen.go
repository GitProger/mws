// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// AddUserBook implements addUserBook operation.
//
// Appends a book to user's list if the list doesn't contain it, if contains, an error returned.
//
// POST /users/{user_id}/books
func (UnimplementedHandler) AddUserBook(ctx context.Context, req *Book, params AddUserBookParams) (r AddUserBookRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetUserBook implements getUserBook operation.
//
// Returns a book by user's and book's ids.
//
// GET /users/{user_id}/books/{book_id}
func (UnimplementedHandler) GetUserBook(ctx context.Context, params GetUserBookParams) (r GetUserBookRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetUserBooks implements getUserBooks operation.
//
// Returns list of user's books by their id.
//
// GET /users/{user_id}/books
func (UnimplementedHandler) GetUserBooks(ctx context.Context, params GetUserBooksParams) (r []Book, _ error) {
	return r, ht.ErrNotImplemented
}

// RemoveUserBook implements removeUserBook operation.
//
// Removes a book by id if exists, otherwise an error returned.
//
// DELETE /users/{user_id}/books/{book_id}
func (UnimplementedHandler) RemoveUserBook(ctx context.Context, params RemoveUserBookParams) (r RemoveUserBookRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateReadingProgress implements updateReadingProgress operation.
//
// Sets page value to a new one, returns an error if the book doesn't exist.
//
// PUT /users/{user_id}/books/{book_id}
func (UnimplementedHandler) UpdateReadingProgress(ctx context.Context, req *UpdateReadingProgressReq, params UpdateReadingProgressParams) (r UpdateReadingProgressRes, _ error) {
	return r, ht.ErrNotImplemented
}
