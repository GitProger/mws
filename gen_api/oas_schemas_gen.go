// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"
)

// Book structrure.
// Ref: #/components/schemas/Book
type Book struct {
	// Uniqie ID of the book from common database.
	ID int `json:"id"`
	// Current page user is reading.
	Page int `json:"page"`
	// Title of the book.
	Title string `json:"title"`
	// Author of the book.
	Author string `json:"author"`
	// Publication date.
	Published time.Time `json:"published"`
}

// GetID returns the value of ID.
func (s *Book) GetID() int {
	return s.ID
}

// GetPage returns the value of Page.
func (s *Book) GetPage() int {
	return s.Page
}

// GetTitle returns the value of Title.
func (s *Book) GetTitle() string {
	return s.Title
}

// GetAuthor returns the value of Author.
func (s *Book) GetAuthor() string {
	return s.Author
}

// GetPublished returns the value of Published.
func (s *Book) GetPublished() time.Time {
	return s.Published
}

// SetID sets the value of ID.
func (s *Book) SetID(val int) {
	s.ID = val
}

// SetPage sets the value of Page.
func (s *Book) SetPage(val int) {
	s.Page = val
}

// SetTitle sets the value of Title.
func (s *Book) SetTitle(val string) {
	s.Title = val
}

// SetAuthor sets the value of Author.
func (s *Book) SetAuthor(val string) {
	s.Author = val
}

// SetPublished sets the value of Published.
func (s *Book) SetPublished(val time.Time) {
	s.Published = val
}

func (*Book) addUserBookRes()           {}
func (*Book) getUserBookRes()           {}
func (*Book) updateReadingProgressRes() {}

// Error.
// Ref: #/components/schemas/Error
type Error struct {
	// HTTP error code.
	StatusCode int `json:"status_code"`
	// Error description.
	Message string `json:"message"`
}

// GetStatusCode returns the value of StatusCode.
func (s *Error) GetStatusCode() int {
	return s.StatusCode
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetStatusCode sets the value of StatusCode.
func (s *Error) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

func (*Error) addUserBookRes()           {}
func (*Error) getUserBookRes()           {}
func (*Error) removeUserBookRes()        {}
func (*Error) updateReadingProgressRes() {}

// RemoveUserBookNoContent is response for RemoveUserBook operation.
type RemoveUserBookNoContent struct{}

func (*RemoveUserBookNoContent) removeUserBookRes() {}

type UpdateReadingProgressReq struct {
	// New current page.
	Page int `json:"page"`
}

// GetPage returns the value of Page.
func (s *UpdateReadingProgressReq) GetPage() int {
	return s.Page
}

// SetPage sets the value of Page.
func (s *UpdateReadingProgressReq) SetPage(val int) {
	s.Page = val
}
